module Duran_Lab2(input clk,
                   input reset,
                   input inputnumber,
                   output reg outputnumber);

				 
parameter  S0=3'b000, 
S1=3'b001,
S2=3'b010,
S3=3'b011,
S4=3'b100;

reg [2:0] state;

  always @(posedge clk or posedge reset) begin
    if(reset) begin
      outputnumber <= 1'b0;
      state <= S0;
    end
    else begin
      case(state)
        S0: begin
          outputnumber <=1'b0;
          if(inputnumber)
            state <= S1;
        end
        S1: begin
          outputnumber <= 1'b0;
          if(~inputnumber)
            state <= S2;
        end
        S2: begin
          outputnumber <= 1'b0;
          if(~inputnumber)
            state <= S3;
          else
            state <= S1;
        end
        S3: begin
          outputnumber <= 1'b0;
          if(inputnumber)
            state <= S4;
          else
            state <= S0;
        end
        S4: begin
          outputnumber <= 1'b1;
          if(inputnumber)
            state <= S1;
          else
            state <= S0;
        end
      endcase
    end
  end


endmodule
